/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q";
}

SIGNAL("Reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Stop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Period")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
	}
}
TRANSITION_LIST("Q[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 146.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 296.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 550.0;
	}
}
TRANSITION_LIST("Q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 134.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 271.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 537.5;
	}
}
TRANSITION_LIST("Q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 121.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 246.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 525.0;
	}
}
TRANSITION_LIST("Q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 221.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 512.5;
	}
}
TRANSITION_LIST("Q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 96.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 96.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 196.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 96.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 500.0;
	}
}
TRANSITION_LIST("Q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 84.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 121.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 171.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 121.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 487.5;
	}
}
TRANSITION_LIST("Q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 146.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 146.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 400.0;
	}
}
TRANSITION_LIST("Q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 171.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 171.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 387.5;
	}
}
TRANSITION_LIST("Q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 196.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 196.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 21.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 46.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 375.0;
	}
}
TRANSITION_LIST("Q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 221.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 221.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 71.875;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
		LEVEL 0 FOR 9.375;
		LEVEL 1 FOR 3.125;
	}
}
TRANSITION_LIST("Reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}
TRANSITION_LIST("Stop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 610.0;
		LEVEL 0 FOR 390.0;
	}
}
TRANSITION_LIST("Period")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 296.875;
		LEVEL 1 FOR 12.5;
		LEVEL 0 FOR 287.5;
		LEVEL 1 FOR 12.5;
		LEVEL 0 FOR 390.625;
	}
}


DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Stop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "Q[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Period";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
